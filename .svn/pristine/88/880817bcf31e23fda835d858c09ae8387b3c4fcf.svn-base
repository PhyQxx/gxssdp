package com.jxdinfo.hussar.ssdp.zig.controller;

import antlr.Tool;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.mapper.Wrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.jxdinfo.hussar.core.base.controller.BaseController;
import com.jxdinfo.hussar.util.ExcelSaxReader;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.streaming.SXSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.beans.factory.annotation.Autowired;
import com.jxdinfo.hussar.core.log.LogObjectHolder;
import org.springframework.web.bind.annotation.RequestParam;
import com.jxdinfo.hussar.ssdp.zig.model.SsPersonInfo;
import com.jxdinfo.hussar.ssdp.zig.service.ISsPersonInfoService;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 控制器
 *
 * @author 赵继国
 * @Date 2019-10-08 18:51:37
 */
@Controller
@RequestMapping("/ssPersonInfo")
public class SsPersonInfoController extends BaseController {

    /**
     * 日志
     */
    private static Logger logger= LoggerFactory.getLogger(SsPersonInfoController.class);
    private String PREFIX = "/ssdp/zjg/";

    @Autowired
    private ISsPersonInfoService ssPersonInfoService;
    @Autowired
    private ExcelSaxReader excelSaxReader;

    /**
     * 跳转到首页
     */
    @RequestMapping("/view")
    public String index() {
        return PREFIX + "ssPersonInfo.html";
    }

    /**
     * 跳转到添加
     */
    @RequestMapping("/ssPersonInfo_add")
    public String ssPersonInfoAdd() {
        return PREFIX + "ssPersonInfo_add.html";
    }

    /**
     * 跳转到修改
     */
    @RequestMapping("/ssPersonInfo_update/{ssPersonInfoId}")
    public String ssPersonInfoUpdate(@PathVariable String ssPersonInfoId, Model model) {
        SsPersonInfo ssPersonInfo = ssPersonInfoService.selectById(ssPersonInfoId);
        model.addAttribute("item",ssPersonInfo);
        LogObjectHolder.me().set(ssPersonInfo);
        return PREFIX + "ssPersonInfo_edit.html";
    }

    /**
     * 获取列表
     */
    @RequestMapping(value = "/list")
    @ResponseBody
    public Object list(String condition,
                       @RequestParam(value="pageNumber", defaultValue="1")int pageNumber,
                       @RequestParam(value="pageSize", defaultValue="20") int pageSize) {
        Page<SsPersonInfo> page = new Page<>(pageNumber, pageSize);
        Wrapper<SsPersonInfo> ew = new EntityWrapper<>();
        Map<String, Object> result = new HashMap<>(5);
        List<SsPersonInfo> list = ssPersonInfoService.selectPage(page, ew).getRecords();
        result.put("total", page.getTotal());
        result.put("rows", list);
        return result;
    }

    /**
     * 上传文件
     */
    @RequestMapping("/uploadExcel")
    @ResponseBody
    public Map<String, Object> uploadExcel(@RequestParam("file") MultipartFile file){

        //用于存放导入的结果信息
        Map<String,Object> resultMap = new HashMap<String, Object>();
        InputStream inputStream=null;
        try{
            //新增的数据条数
            int count = 0;
            //新增的多个map
            List<SsPersonInfo> ssPersonInfos = new ArrayList<>();
            long startTime = System.currentTimeMillis();
            //转换为输入流
            inputStream = file.getInputStream();
            ExcelSaxReader reader = excelSaxReader.parse(inputStream);
            List<String[]> datas = reader.getDatas();
            for(String[] str : datas){
                System.out.println("=========数组长度"+str.length);
                SsPersonInfo personInfo = new SsPersonInfo();
                personInfo.setIdentityCard(str[0]);
                personInfo.setName(str[1]);
                personInfo.setNativePlace(str[2]);
                /**
                 * 根据籍贯截取出镇
                 */
                int index = str[2].indexOf(" ");
                int lastIndexOf = str[2].lastIndexOf(" ");
                String town = str[2].substring(index, lastIndexOf);
                personInfo.setTown(town);
                /**
                 * 根据籍贯截取出村
                 */
                String village = str[2].substring(lastIndexOf);
                personInfo.setVillage(village);
                ssPersonInfos.add(personInfo);
            }
            long endTime = System.currentTimeMillis();
            System.out.println("===============读取Excel耗时："+(endTime-startTime)+"ms");

            long startTime2 = System.currentTimeMillis();
            resultMap= ssPersonInfoService.savePersonInfo(ssPersonInfos);
            long endTime2 = System.currentTimeMillis();
            System.out.println("===============执行插入耗时："+(endTime2-startTime2)+"ms");
        }catch (Exception e){
            e.printStackTrace();
            resultMap.put("count","0");
        }finally {
            if (inputStream!=null) {
                try {
                    inputStream.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
        return resultMap;
    }

@RequestMapping("/exportVillageFile")
@ResponseBody
public Object exportVillageFile(HttpServletRequest request, HttpServletResponse response){
        Map<String, Object> result = new HashMap<>();
        try {
            result=ssPersonInfoService.exportVillageFile(request,response);
        }catch (Exception e){
            e.printStackTrace();
            SsPersonInfoController.logger.error("以村为单位导出数据，exportVillageFile方法报错"+e.getMessage());
        }
        return result;
}

    /**
     * 详情
     */
    @RequestMapping(value = "/detail/{ssPersonInfoId}")
    @ResponseBody
    public Object detail(@PathVariable("ssPersonInfoId") String ssPersonInfoId) {
        return ssPersonInfoService.selectById(ssPersonInfoId);
    }
}
